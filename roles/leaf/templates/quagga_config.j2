{% set bgpvars = bgp[ansible_hostname] -%}
{% set loopback_ip = interfaces[ansible_hostname].loopback.ipv4 -%}

{### Set the logging and save all the config in Quagga.conf file ###}
log file /var/log/quagga/quagga.log
service integrated-vtysh-config
!
{### Configure the fabric ports IPv6 settings for unnumbered operation ###}
{% for interface in bgpvars.internal_fabric.interfaces -%}
interface {{interface}}
 no ipv6 nd suppress-ra
 ipv6 nd ra-interval 3
!
{% endfor %}
!
{### Configure the fabric ports IPv6 settings for unnumbered operation ###}
{% if bgpvars.exit_peers is defined -%}
{% for interface in bgpvars.exit_peers.interfaces -%}
interface {{interface}}
 no ipv6 nd suppress-ra
 ipv6 nd ra-interval 3
!
{% endfor %}
{% endif -%}
!
router bgp {{ bgpvars.myasn }}
  bgp router-id {{loopback_ip|replace("/32", "")}}
  maximum-paths 64
  bgp bestpath as-path multipath-relax no-as-set
  bgp bestpath compare-routerid
  bgp default show-hostname

{### Add aggregate addresses and network statements ###}
  {% if bgpvars.aggregates is defined -%}
  {% for aggregate in bgpvars.aggregates -%}
    aggregate-address {{aggregate}} summary-only
  {% endfor %}
  {% endif -%}

  {% if bgpvars.networks is defined -%}
  {% for network in bgpvars.networks -%}
    network {{network}}
  {% endfor %}
  {% endif -%}

{### Build the internal fabric ###}
  neighbor internal_fabric peer-group
  neighbor internal_fabric description {{bgpvars.internal_fabric.description}}
  neighbor internal_fabric advertisement-interval 0
  neighbor internal_fabric timers 1 3
  neighbor internal_fabric timers connect 3
  neighbor internal_fabric remote-as external
  neighbor internal_fabric capability extended-nexthop
{### Configure internal fabric prefix lists ###}
  {% if bgpvars.internal_fabric.prefix_list_out is defined -%}
    neighbor internal_fabric prefix-list {{bgpvars.internal_fabric.prefix_list_out}} out
  {% endif -%}
  {% if bgpvars.internal_fabric.prefix_list_in is defined -%}
    neighbor internal_fabric prefix-list {{bgpvars.internal_fabric.prefix_list_in}} in
  {% endif -%}

{### Configure interfaces ###}
 {% for interface in bgpvars.internal_fabric.interfaces -%}
   neighbor {{interface}} interface
   neighbor {{interface}} peer-group internal_fabric
 {% endfor %} 

{% if bgpvars.exit_peers is defined -%}
{### Loop through server BGP connections ###}
  neighbor exit_peers peer-group
  neighbor exit_peers description {{bgpvars.exit_peers.description}}
  neighbor exit_peers advertisement-interval 0
  neighbor exit_peers timers 1 3
  neighbor exit_peers timers connect 3
  neighbor exit_peers remote-as external
  neighbor exit_peers capability extended-nexthop
{### Configure exit_peers prefix lists ###}
  {% if bgpvars.exit_peers.prefix_list_out is defined -%}
    neighbor exit_peers prefix-list {{bgpvars.exit_peers.prefix_list_out}} out
  {% endif -%}

  {% if bgpvars.exit_peers.prefix_list_in is defined -%}
    neighbor exit_peers prefix-list {{bgpvars.exit_peers.prefix_list_in}} in
  {% endif -%}

{### Configure interfaces ###}
 {% for interface in bgpvars.exit_peers.interfaces -%}
   neighbor {{interface}} interface
   neighbor {{interface}} peer-group exit_peers
 {% endfor %}
{% endif -%}
!
address-family ipv6 unicast
{### Configure ipv6 network statements ###}
 {% if bgpvars.networksv6 is defined -%}
 {% for network in bgpvars.networksv6 -%}
   network {{network}}
 {% endfor %}
 {% endif -%}
{### Configure internal fabric interfaces ###}
   neighbor internal_fabric activate
 {% for interface in bgpvars.internal_fabric.interfaces -%}
   neighbor {{interface}} peer-group internal_fabric
   neighbor {{interface}} activate
 {% endfor %}
!
{% if bgpvars.exit_peers is defined -%}
{### Configure fw peers interfaces ###}
   neighbor exit_peers activate
 {% for interface in bgpvars.exit_peers.interfaces -%}
   neighbor {{interface}} peer-group exit_peers
   neighbor {{interface}} activate
 {% endfor %}
{### Configure exit_peers ipv6 prefix lists ###}
 {% if bgpvars.exit_peers.prefix_list_out is defined -%}
   neighbor exit_peers prefix-list {{bgpvars.exit_peers.prefix_list_out}} out
 {% endif -%}
 {% if bgpvars.exit_peers.prefix_list_in is defined -%}
   neighbor exit_peers prefix-list {{bgpvars.exit_peers.prefix_list_in}} in
 {% endif -%}
{% endif -%}
{### Configure internal fabric ipv6 prefix lists ###}
 {% if bgpvars.internal_fabric.prefix_list_out is defined -%}
   neighbor internal_fabric prefix-list {{bgpvars.internal_fabric.prefix_list_out}} out
 {% endif -%}
 {% if bgpvars.internal_fabric.prefix_list_in is defined -%}
   neighbor internal_fabric prefix-list {{bgpvars.internal_fabric.prefix_list_in}} in
 {% endif -%}
! 
 exit-address-family
!

!
{### Configure prefix lists ###} 
{% set lists = prefix_lists[ansible_hostname] -%}
{% for list_name in lists.keys() -%}
  {% for seq in lists[list_name] -%}
  ip prefix-list {{list_name}} seq {{seq}}
{% endfor %}
{% endfor %}
!
{### Configure ipv6 prefix lists ###}
{% if prefix_listsv6 is defined -%} 
{% if prefix_listsv6[ansible_hostname] is defined -%} 
{% set lists = prefix_listsv6[ansible_hostname] -%}
{% for list_name in lists.keys() -%}
  {% for seq in lists[list_name] -%}
  ipv6 prefix-list {{list_name}} seq {{seq}}
{% endfor %}
{% endfor %}
{% endif %}
{% endif %}
